---
title: Creating and Binding Solace Messaging Service Instances
owner: Partners
---

This topic describes how developers create and bind instances of the Solace Messaging service.

After deploying the Solace Messaging for Pivotal Cloud Foundry (PCF) tile, the Solace Messaging service appears in the Marketplace. Developers can use either the Cloud Foundry Command Line Interface (cf CLI) or Apps Manager to create an instance of the service and bind it to applications that need to exchange messages.

Each service instance represents a Message VPN on a Solace Virtual Message Router (VMR). By binding an application to the instance, developers give the application permission to access this Message VPN through a client username. For more information about how developers can use the credentials provided by the binding, see the [Understanding Solace Messaging Credentials](credentials.html) topic.

Creating a service instance also gives the developer permissions to manage the Message VPN through the SolAdmin administration tool. For more information, see the [Managing the Message VPN](managing.html) topic.

A service instance can be customized at creation time and updated as well using parameters when certain features are enabled.

1. When LDAP is enabled, these parameters can be used to control management access to a service instance.
 * ldapGroupAdminReadOnly: Admin ReadOnly permissions are granted to the provided value for that parameter.
 * ldapGroupAdminReadWrite: Admin ReadWrite permissions are granted to the provided value for that parameter.

1. When TCP Routes are enabled, and unless the configuration per procotol is "Not Allowed", you may use these parameters with valid values: `true`, `false` to control TCP Routes per service instance.
 * `tcp_route_enabled`
 * `smf_tcp_route_enabled`
 * `smf_tls_tcp_route_enabled`
 * `smf_zip_tcp_route_enabled`
 * `web_messaging_tcp_route_enabled`
 * `web_messaging_tls_tcp_route_enabled`
 * `mqtt_tcp_route_enabled`
 * `mqtt_tls_tcp_route_enabled`
 * `mqtt_ws_tcp_route_enabled`
 * `mqtt_wss_tcp_route_enabled`
 * `rest_tcp_route_enabled`
 * `rest_tls_tcp_route_enabled`

The following tutorials show you how to create a Solace Messaging service called *solace-messaging-instance* and bind this service instance to an application named *web-backend*. It also shows you how to update the service instances with optional parameter if their features are enabled.

##<a id='cf-cli'></a> Create and Bind a Service Instance with the cf CLI

To create and bind an instance of the Solace Messaging service with the cf CLI, perform the following steps:

1. Set your API endpoint to the Cloud Controller of your deployment.
  <pre class="terminal">
  $ cf api api.YOUR-SYSTEM-DOMAIN
  Setting api endpoint to api.YOUR-SYSTEM-DOMAIN...
  OK
  API endpoint:  <span>https:</span>//api.YOUR-SYSTEM-DOMAIN (API version: 2.59.0)
  Not logged in. Use 'cf login' to log in.
  </pre>
1. Log in to your deployment and select an org and a space.
  <pre class="terminal">
  $ cf login
  API endpoint: <span>https:</span>//api.YOUR-SYSTEM-DOMAIN
  Email> user<span>@</span>example.com
  Password>
  </pre>
1. List the Marketplace services and locate the Solace Messaging service and its associated service plans.
	<pre class="terminal">
	$ cf marketplace
	Getting services from marketplace in org example / space development as user<span>@</span>example.com...
	OK

	service          plans                                                description
	solace-messaging shared, large, community, medium-ha, large-ha        Solace Messaging for real-time, multi-protocol data distribution
	</pre>
1. Create an instance of the Solace Messaging service. Select the appropriate service plan for your application. See [PCF Marketplace Plans](index.html#marketplace-plans) for how the service plans differ. The following example uses the `large-ha` service plan.

	<pre class="terminal">
	$ cf create-service solace-messaging shared solace-messaging-instance
	Creating service instance solace-messaging-instance in org example / space development as user@example.com...
	OK
	</pre>


1. (Optional) Update the service instance of the Solace Messaging service assuming both LDAP and TCP Routes are enabled.
This grants external access to the SMF messaging protocol, and grant Admin ReadOnly and Admin ReadWrite to the Message VPN
for this service instance to the provided LDAP groups.


	<pre class="terminal">
        $ cf update-service solace-messaging-instance -c '{ "smf_tcp_route_enabled" : "true", "ldapGroupAdminReadOnly" : "cn=username1,ou=groups,dc=solace,dc=com", "ldapGroupAdminReadWrite" : "cn=username2,ou=groups,dc=solace,dc=com" }'
	Updating service instance solace-messaging-instance user...
	OK
	</pre>

    <p class="note"><strong>Note</strong>: Updating a Service Instance that has existing application bindings can be a service affecting operation. An existing application may need to unbind and rebind to obtain its updated Solace Messaging Credentials</p>

1. Bind the instance to an application called 'web-backend'
  <pre class="terminal">
  $ cf bind-service web-backend solace-messaging-instance
  Binding service solace-messaging-instance to app web-backend in org example / space development as user@example.com...
  OK
  TIP: Use 'cf restage web-backend to ensure your env variable changes take effect
  </pre>
1. Restage the application for the binding to take effect.
  <pre class="terminal">
  $ cf restage web-backend
  </pre>

##<a id='apps-man'></a> Create and Bind a Service Instance in Apps Manager

To create and bind an instance of the Solace Messaging service in Apps Manager, perform the following steps:

1. Navigate to `apps.YOUR-SYSTEM-DOMAIN` in a browser and log in.
1. Select the org and space in which you wish to create the Solace Messaging service.
1. Click on Service
1. Click on **Add Service**.
1. Click **Solace Messaging**.
1. Select the appropriate service plan for your application. See [PCF Marketplace Plans](index.html#marketplace-plans) for how the service plans differ.
  <%= image_tag('appsmanager_solace_messaging_marketplace_selection.png') %> 
1. Enter an **Instance Name** and select a space under **Add to Space**. To bind the service instance to an application, select an application under **Bind to App**. Then click **Add**. 
  <%= image_tag('appsmanager_solace_messaging_create_service.png') %> 
1. If you did not bind the service to an application earlier at service creation time, you can bind an application to a service instance by navigating to the application page, clicking **Services**, then clicking **Bind a Service**.
  <%= image_tag('appsmanager_solace_messaging_service_list_empty.png') %>
1. Select a service instance to bind to the application and click **Bind**.
  <%= image_tag('appsmanager_solace_messaging_bind_service_selected.png') %>
1. Once the service is bound you will find it listed under **Services**.
  <%= image_tag('appsmanager_solace_messaging_service_list_has_service.png') %>
