---
title: Service Keys for Solace Messaging Service Instances
owner: Partners
---


This topic describes how developers can create service keys for to instances of the Solace Messaging service.


##<a id='service-keys'></a>About Service Keys


By creating a service key the developers can give an application as represented by the service key permission to access this Solace Message VPN through a client username or LDAP.


As opposed to [Bindings](bindings.html), the developer assumes the responsibility of passing the service key details to the application so it may the credentials to connect and exchange messages.

This is useful for an application not running in the Cloud Foundry so it can be offered a Solace Messaging Service Instance in form of a service key.

The following tutorials assumes you have created a Solace Messaging service called *solace-messaging-instance* as discussed in [Service Instances](service-instances.html) and that you have some application running outside of Cloud Foundry.

A typical use case is when you have TCP Routes enabled and you have applications running outside Cloud Foundry that need access to Solace Messaging Services running inside Cloud Foundry.


##<a id='service-key-cf-cli'></a>Creating a Service key for a Service Instance with the cf CLI


To create a service key for an existing Solace Messaging service with the cf CLI, perform the following steps:

1. Set your API endpoint to the Cloud Controller of your deployment.
  <pre class="terminal">
  $ cf api api.YOUR-SYSTEM-DOMAIN
  Setting api endpoint to api.YOUR-SYSTEM-DOMAIN...
  OK
  API endpoint:  <span>https:</span>//api.YOUR-SYSTEM-DOMAIN (API version: 2.59.0)
  Not logged in. Use 'cf login' to log in.
  </pre>

1. Log in to your deployment and select an org and a space.
  <pre class="terminal">
  $ cf login
  API endpoint: <span>https:</span>//api.YOUR-SYSTEM-DOMAIN
  Email> user<span>@</span>example.com
  Password>
  </pre>


1. Locate the previously created service
	<pre class="terminal">
	$ cf services
	Getting services in org example / space dev as user<span>@</span>example.com...
	OK

	name                        service            plan     bound apps   last operation
	solace-messaging-instance   solace-messaging   large-ha              create succeeded
	</pre>

1. Create the service key for the solace-messaging-instance and name it 'external-mobile-app'
  <pre class="terminal">
  $ cf create-service-key solace-messaging-instance external-mobile-app
  Creating service key external-mobile-app for service instance solace-messaging-instance as user<span>@</span>example.com...
  OK
  </pre>

1. List the service keys for our service instance
  <pre class="terminal">
  $ cf service-keys solace-messaging-instance
  Getting keys for service instance solace-messaging-instance as admin...

  name
  external-mobile-app
  </pre>

